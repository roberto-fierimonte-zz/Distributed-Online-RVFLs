fprintf('Benvenuto,\nAvvio simulazione di apprendimento distribuito...\n\n');
prompt = 'Inserisci la dimensione della k-fold cross-validation (k): ';
k=input(prompt);
prompt = '\nInserisci la dimensione dell espansione funzionale (K): ';
K=input(prompt);
prompt = '\nInserisci il valore del parametro di regolarizzazione (lambda): ';
lambda=input(prompt);
prompt = '\nInserisci il numero di iterazioni del consensus (n_iter): ';
n_iter=input(prompt);
n_nodi=size(W,1);
fprintf('\nEffettuo una %i-fold cross-validation per testare la bontà dell algoritmo\n\n',k);
c = cvpartition(size(X,1),'kfold',k);
tic;
fprintf('Inizializzo la rete RVFL, K = %i, lambda = %e\n',K,lambda);
fprintf('Genero casualmente i pesi e le soglie dell espansione funzionale...\n');
[coeff,soglie]=genera_rete(K,size(X,2));
net=struct('soglie',soglie,'coeff',coeff,'dimensione',K,'lambda',lambda);
fprintf('Rete inizializzata, trascorsi %.2f secondi\n\n', toc);
NMSE=[0,0,0];
NSR=[0,0,0];
for i = 1:c.NumTestSets
    fprintf('Fold: %i\n---------------------------------------------------------------------------------------------------------------\n', i);
    X_train=X(c.training(i),:);
    Y_train=Y(c.training(i),:);
    X_test=X(c.test(i),:);
    Y_test=Y(c.test(i),:);
    fprintf('Calcolo dei parametri in corso...\n');
    tic;
    [batchsol,batcherror]=rvflregmod(X_train,Y_train,net);
    fprintf('Calcolo dei parametri in maniera non distribuita completato,trascorsi %.2f secondi\n', toc);
    tic;
    [distrsol,distrout,distrNMSE,distrdelta]=distributed_regression3mod(X_train,Y_train,net,n_nodi,W,n_iter);
    fprintf('Calcolo dei parametri in maniera distribuita con consensus completato,trascorsi %.2f secondi\n', toc);
    tic;
    [testerr,testerr2]=distributed_regression3modsenzaconsensus(X_train,Y_train,X_test,Y_test,net,n_nodi);
    fprintf('Calcolo dei parametri in maniera distribuita senza consensus completato,trascorsi %.2f secondi\n', toc);
    [batchexit,batcherr,batcherr2]=test_reg(X_test,Y_test,net,batchsol);
    [distrexit,distrerr,distrerr2]=test_reg(X_test,Y_test,net,distrsol);
    NMSE=NMSE+[batcherr,distrerr,testerr];
    NSR=NSR+[batcherr2,distrerr2,testerr2];
    fprintf('Prestazioni di test :                NMSE:      NSR:\n\n');
    fprintf('Dati non distribuiti:                %.4f     %.4f\n\n',batcherr,batcherr2);
    fprintf('Dati distribuiti con consensus:      %.4f     %.4f\n\n',distrerr,distrerr2);
    fprintf('Dati distribuiti senza consensus:    %.4f     %.4f\n\n',testerr,testerr2);   
    
end
fprintf('Riepilogo simulazione:\n---------------------------------------------------------------------------------------------------------------\n');
fprintf('                                    Media NMSE:   Media NSR:\n\n');
fprintf('Dati non distribuiti:               %.4f        %.4f\n\n',NMSE(1)/k,NSR(1)/k);
fprintf('Dati distribuiti con consensus:     %.4f        %.4f\n\n',NMSE(2)/k,NSR(2)/k);
fprintf('Dati distribuiti senza consensus:   %.4f        %.4f\n\n',NMSE(3)/k,NSR(3)/k);
clear;